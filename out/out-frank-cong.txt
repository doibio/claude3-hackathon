data/students/protein-design-part-2/frank-cong.txt
----------
# Class #4: Protein Design (Part 2)

# Class Note

## Pranam

![Screenshot 2024-03-05 at 14.15.23.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/1fff7b9b-2064-4860-bc18-23187d38ba24/Screenshot_2024-03-05_at_14.15.23.png)

![Screenshot 2024-03-05 at 14.15.59.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/fe747686-154f-4f89-adbb-e33ebbe08dd3/Screenshot_2024-03-05_at_14.15.59.png)

pro to eng bio programmable

why: cure disease; food; bioenergy; ecosystem (kevin makl? gene drive); speed up sci

### DNA

how:

bind/target; cut (NHEJ cell self fix; or cell die); donor DNA to fill into the cut (HDR)

e.g. CRISPR-Cas9 target and cut (guiding dna, cas9 enzyme to cut, target sequence)

only 12.5% (2Gs, NGG)

so search for other targets? (SPAMALOT) (1G, NNG) (NAA)… no need for G

or  (NRN, r=a/g)

can we NNN? (NRN+NNG=NNN (SpRYc))

### Cells/Tissues

transcription factors: 

design protein to convert … to stem cells or differentiate stem cells

? single-cell sequencing

making cells close to oocyte

<gameto com>

### Proteins

therapy: hit bad proteins

computationally design small proteins/peptides to bind to the target protein structure

(SARS Covid2)

**CRISPR-like systems to edit protein**

problem: undruggable, can’t be target using structure-based method

**Can we bind without ref structures at all?**

Natural Language Model → Protein LM (capture stru, func, interaction)

and image

![Screenshot 2024-03-05 at 14.38.55.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/bc6b6f8d-c4b9-44bd-8790-45f7ffc84683/Screenshot_2024-03-05_at_14.38.55.png)

![Screenshot 2024-03-05 at 14.39.43.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/77e13acd-1139-40d5-b11a-3fbdf952d96d/Screenshot_2024-03-05_at_14.39.43.png)

Learn: Start with known binding partners of the target (SaLT)

(Pepr?)→S+P=SnP [**SnP uses only the sequences not the structures**]

![Screenshot 2024-03-05 at 14.42.55.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/1bf4b184-10d9-4742-b25d-12e022cc723e/Screenshot_2024-03-05_at_14.42.55.png)

PepPrCLIP?

PepMLM (in homework)

![Screenshot 2024-03-05 at 14.45.59.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/edbbe4cb-b319-4f5a-a2e3-2d3725efd475/Screenshot_2024-03-05_at_14.45.59.png)

TPS (to increase certain proteins)

CRISPR: RNA-guided

(): peptide-guided

***Less usage of animal

**[Deinococcus radiodurans](https://en.wikipedia.org/wiki/Deinococcus_radiodurans) (DNA self-healing)?**

## Phil (strategies for protein design)

![Screenshot 2024-03-05 at 16.23.37.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/92f0c3ba-5fe6-4465-94e1-f1f14b42e371/Screenshot_2024-03-05_at_16.23.37.png)

### 3. Generation

### 4. Annotation & Structure

? protein annotation

convergent evolution (different proteins that can have similar functions)

**change the architecture to fit in more biological functions (16:43)**

### 5.

![Screenshot 2024-03-05 at 16.44.26.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/27d64d76-a9a7-45bf-91fc-e9577b0bf244/Screenshot_2024-03-05_at_16.44.26.png)

Bio-privacy

## Recitation Mar 6

### Final Project (Group)

why: alternative to antibiotics

phage injected to body, kill targeted bacteria (less resistance risks)

problem: bacteria can get resistant to phage too

mission: phage that can ignore all mutation and kill bac fast enough

engineer MS2 bacphage to battle e.coli

![Screenshot 2024-03-06 at 18.16.37.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/fb6967ac-84bb-4826-86d7-1a439eb5beb1/Screenshot_2024-03-06_at_18.16.37.png)

![Screenshot 2024-03-06 at 18.16.56.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/3d7a6eb3-84e1-4ece-a5aa-f14acf3b75ef/Screenshot_2024-03-06_at_18.16.56.png)

![Screenshot 2024-03-06 at 18.18.08.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/f3c447e8-5170-4419-9f52-be0a2dc7dfcb/Screenshot_2024-03-06_at_18.18.08.png)

![Screenshot 2024-03-06 at 18.18.36.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/1258efd1-a649-4c74-a845-26ff74124201/Screenshot_2024-03-06_at_18.18.36.png)

engineer lysis protein

two domains: trans, soluble domain?

bac protein involve: DanJ (mutate DanJ to get resistant to MS2-which?)

directions: ?; make it react fast 18:21

### Outline

1. Design mutated versions of the L protein
2. Synthesize the L protein mutant genes via Twist
3. Clone the L protein mutant gene into a plasmid using **Gibson Assembly (in lab in the coming weeks)**
4. Test the designed mutant proteins using Nuclera
    1. Can the protein still be produced?
    2. Does the protein still interact DnaJ?
5. Test the L protein in E. coli
    1. Do the mutant phages kill E. coli?
    2. How fast are the mutant phages killing E. coli ?
    3. Is E. coli able to develop a resistance against the mutant phages?

Be a part of a real research project!

priorities: individual group(submit 5 test one) pranam

# Archived Assignment pastes

### **Part A (From Pranam)**

<aside>
⚠️ Mandatory for MIT/Harvard Students and Committed Listeners. **Due at the start of class March 12**

</aside>

1. Sign up for HuggingFace and request access for PepMLM:
    
    https://huggingface.co/ChatterjeeLab/PepMLM-650M
    
2. Find he amino acid sequence for SOD1 in UniProt (ID: [P00441](https://www.uniprot.org/uniprotkb/P00441/entry)), a protein when mutated, can cause Amyotrophic lateral sclerosis (ALS). In fact, the A4V (when you change position 4 from Alanine to Valine) causes the most aggressive form of ALS, so make that change in the sequence
3. Enter your mutated SOD1 sequence into the PepMLM inference API and generate 4 peptides of length 12 amino acids (Step 5 takes a while so you can also just pick 1 or 2 peptides)
4. To your list, add this known SOD1-binding peptide to your list: FLYRWLPSRRGG [from -https://genesdev.cshlp.org/content/22/11/1451]
5. Go to AlphaFold-Multimer (https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb). This is similar to what you did for homework last week but instead for a protein-peptide complex
    
    Set model_type: alphafold2_multimer_v3 (this model has been shown to recapitulate peptide-protein binding accurately: https://www.frontiersin.org/articles/10.3389/fbinf.2022.959160/full). Add your query sequence - Its the SOD1Sequence:PeptideSequence. : is important.
    
6. After running AlphaFold-Multimer with your 5 peptides alongside your mutated SOD1 sequence, plot the ipTM scores, which measures the relative confidence of the binding region.
7. Provide a 1 paragraph write-up of your results and be sure to cite the relevant works

## **Part B (Final Project: L-Protein Mutants)**

<aside>
⚠️ Mandatory for MIT/Harvard Students. **Due at the start of class March 12
This homework requires computation that might take you a while to run. So please get started early.**

</aside>

Bacteriophage MS2 is a single stranded RNA virus whose genome only encodes 4 proteins -the maturation protein (*A*-protein), the [lysis](https://en.wikipedia.org/wiki/Lysis) (*L-Protein*) protein, the coat protein (*cp*), and the [replicase](https://en.wikipedia.org/wiki/Replicase) (*rep*) protein. Bacteriophages infect E-coli. Upon infection, the L-Protein forms pores in the E-coli cell membrane which eventually leads to breakdown of the membrane (Lysis). DnaJ is a chaperone protein in E-coli (chaperone proteins are proteins that assist during protein folding). It is thought to be involved in the lysis mechanism. In this homework, we will explore if computational models we learnt about in the last class are useful for designing variants/mutants of the lysis protein sequence. We will study the effects of L-protein mutants on the bacteriophage infectivity.

![source - https://www.oaepublish.com/articles/mrr.2023.28](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/bbb2354b-ee49-47db-b00b-77dae8fa8d76/6fa8f596749f456c8ddb98d9e8d48735.jpg)

source - https://www.oaepublish.com/articles/mrr.2023.28

You can read more about the final project description here - [https://www.notion.so/howtogrowalmostanything/How-to-Grow-Almost-Anything-2024-63a45d6c8f934456b70e30eee86f9b78?p=8945a45ee86b486aa62c79b0cfff119e&pm=c](https://www.notion.so/Group-Final-Project-8945a45ee86b486aa62c79b0cfff119e?pvs=21)

****Our goal for this part of the homework is to create mutants of L-protein that affect its lysis activity and/or its interaction with DNAj. Making a mutation for L-protein without a way to computationally predict what happens to lysis or its interaction with DNAj is hard. So we are going to try various hypotheses on how to use the models from last week and also try a few other tools. These mutants will be tested in the lab.

**Lysis Protein Sequence (UniProtKB ID:**  https://www.uniprot.org/uniprotkb/P03609/entry**)**
METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT

Lysis protein contains a soluble N-terminal domain followed by a transmembrane protein (blue/last 35 residues). Transmembrane protein affects the lysis activity. The soluble domain (green) is the domain responsible for interaction with DNAj.  

Additional Information

1. Using the mutational analysis of lysis protein from https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5775895/  Here is a list of some mutations and their effect on lysis  [https://docs.google.com/spreadsheets/d/11WzDDNkQDEiqbUSGV0ZCqITGctyNFpD7xnPlhsj2BhE/edit#gid=0](https://docs.google.com/spreadsheets/d/11WzDDNkQDEiqbUSGV0ZCqITGctyNFpD7xnPlhsj2BhE/edit?usp=sharing) [Three columns highlighted ! Please copy the sheet before any edits).
2. In the last class, we used pBLAST to find evolutionary sequences from other organisms and visualized it using clustalomega. BLAST results for L-protein are here - https://drive.google.com/drive/folders/1eQeuwL9WiO16bw6Lb8z-TVpbWIoAF4EH?usp=share_link .  You can upload it to clustalomega - https://www.ebi.ac.uk/jdispatcher/msa/clustalo to get the alignments. Usually a good idea to not make mutations in the conserved sites (the amino acid positions where you see no changes in the alignments)

### Mutagenesis using Protein Language Models

<aside>
👤 TA: Manu Ponnapati, Allan Costa

</aside>

1. Run this [notebook](https://colab.research.google.com/drive/1tFSwLWkSeu9KdsLPdepzPfGW1LBy2RPd?usp=sharing) to generate for each position in the amino acid sequence, a “score” for what would happen to the protein if you mutated into another amino acid. It can be positive or negative to the protein fitness. 
2. Use the experimental data here - https://docs.google.com/spreadsheets/d/11WzDDNkQDEiqbUSGV0ZCqITGctyNFpD7xnPlhsj2BhE/edit?usp=sharing
3. Does the experimental data correlated with the scores from the notebook earlier ?
4. Using information about effect of protein mutations at these sites - using both the scores and the data in the drive, come up with 2 mutations for each student along with how you came up with them and why you believe they would work. 1 Mutation must be in the transmembrane region (refer to notes above on what amino acid positions these are) and 1 Mutation must be in the soluble region . Remember that you can also use the pBLAST to see which residues are conserved and not mutate them if you want to. 
5. You can use any protein structure prediction tool from earlier class if you want to 
6. You can refer to the notebook [here](https://www.notion.so/3188475a568e47c6a4c90ba0a5a1a888?pvs=21) if you want to generate mutations programmatically

### Mutagenesis using Af2-Multimer

<aside>
👤 TA: Manu Ponnapati,  Allan Costa

</aside>

1. One of our goals is to prevent the interaction of L-Protein with DNAj
2. We will co-fold the DNAj protein sequence with L-Protein and study if any mutations affect their interaction. 
3. DNAj sequence - MAKQDYYEILGVSKTAEEREIRKAYKRLAMKYHPDRNQGDKEAEAKFKEIKEAYEVLTDSQKRAAYDQYGHAAFEQGGMGGGGFGGGADFSDIFGDVFGDIFGGGRGRQRAARGADLRYNMELTLEEAVRGVTKEIRIPTLEECDVCHGSGAKPGTQPQTCPTCHGSGQVQMRQGFFAVQQTCPHCQGRGTLIKDPCNKCHGHGRVERSKTLSVKIPAGVDTGDRIRLAGEGEAGEHGAPAGDLYVQVQVKQHPIFEREGNNLYCEVPINFAMAALGGEIEVPTLDGRVKLKVPGETQTGKLFRMRGKGVKSVRGGAQGDLLCRVVVETPVGLNERQKQLLQELQESFGGPTGEHNSPRSKSFFDGVKKFFDDLTR
4. You can use the information found in mutational analysis experiments [here](https://www.notion.so/9754985e615d47979df5946e7659b4f4?pvs=21)
5. Try to come up with two mutations each with mutations at least two different residue positions. Only make these mutations in the soluble region of the L-protein (refer to notes above on what amino acid positions these are). Explain how you picked your mutations
6. Notebook for AF2-Multimer - https://colab.research.google.com/github/sokrypton/ColabFold/blob/main/AlphaFold2.ipynb

### Mutagenesis using Rosetta

<aside>
👤 TA: Manu Ponnapati,  Allan Costa

</aside>

1. Fold the DNAj sequence and the sequence of the L-Protein using Af2-Multimer. 
2. Download the PDB file from Af2 Multimer
3. We will utilize Rosetta (This is a non machine learning based computational protein engineering tool - and one of the most widely used protein engineering packages). We are going to run a protocol called “Point Mutation Scan”
4. The notebook for it is herehttps://colab.research.google.com/drive/1CW3BrzTbnIh9DUWevWsSz2_CIfrHpsb8?usp=sharing 
5.  [Other rosetta tutorials can be found [here](https://rosettacommons.github.io/PyRosetta.notebooks/) ]

### Random Mutagenesis

<aside>
👤 TA: Manu Ponnapati,  Allan Costa

</aside>

1. Create a python function to generate random mutation combinations at atleast 2 residues by using the information found in mutational analysis experiments [here](https://www.notion.so/9754985e615d47979df5946e7659b4f4?pvs=21)
2. Co-Fold the random mutation with DNAj using Af2_Multimer. 
DNAj sequence - MAKQDYYEILGVSKTAEEREIRKAYKRLAMKYHPDRNQGDKEAEAKFKEIKEAYEVLTDSQKRAAYDQYGHAAFEQGGMGGGGFGGGADFSDIFGDVFGDIFGGGRGRQRAARGADLRYNMELTLEEAVRGVTKEIRIPTLEECDVCHGSGAKPGTQPQTCPTCHGSGQVQMRQGFFAVQQTCPHCQGRGTLIKDPCNKCHGHGRVERSKTLSVKIPAGVDTGDRIRLAGEGEAGEHGAPAGDLYVQVQVKQHPIFEREGNNLYCEVPINFAMAALGGEIEVPTLDGRVKLKVPGETQTGKLFRMRGKGVKSVRGGAQGDLLCRVVVETPVGLNERQKQLLQELQESFGGPTGEHNSPRSKSFFDGVKKFFDDLTR
3. Score the binding energy of the predicted complexes - You can refer to the Rosetta notebook if you want to use the interface analyzer in rosetta. And pick 2 mutations for each student and explain why you chose them. 
4. [This is computationally expensive to run]. If you want help running it scale - Contact Manu or Allan

## **Part B (Final Project: L-Protein Mutants)**

<aside>
⚠️ Mandatory for MIT/Harvard Students and Committed Listeners. **Due at the start of class March 12
This homework requires computation that might take you a while to run. So please get started early.**

</aside>

Bacteriophage MS2 is a single stranded RNA virus whose genome only encodes 4 proteins -the maturation protein (*A*-protein), the [lysis](https://en.wikipedia.org/wiki/Lysis) (*L-Protein*) protein, the coat protein (*cp*), and the [replicase](https://en.wikipedia.org/wiki/Replicase) (*rep*) protein. Bacteriophages infect E-coli. Upon infection, the L-Protein forms pores in the E-coli cell membrane which eventually leads to breakdown of the membrane (Lysis). DnaJ is a chaperone protein in E-coli (chaperone proteins are proteins that assist during protein folding). It is thought to be involved in the lysis mechanism. In this homework, we will explore if computational models we learnt about in the last class are useful for designing variants/mutants of the lysis protein sequence. We will study the effects of L-protein mutants on the bacteriophage infectivity.

You can read more about the final project description here on Lisa’s notes- [https://www.notion.so/howtogrowalmostanything/How-to-Grow-Almost-Anything-2024-63a45d6c8f934456b70e30eee86f9b78?p=8945a45ee86b486aa62c79b0cfff119e&pm=c](https://www.notion.so/Group-Final-Project-8945a45ee86b486aa62c79b0cfff119e?pvs=21)

![source - https://www.oaepublish.com/articles/mrr.2023.28](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/bbb2354b-ee49-47db-b00b-77dae8fa8d76/6fa8f596749f456c8ddb98d9e8d48735.jpg)

source - https://www.oaepublish.com/articles/mrr.2023.28

## **Goal:**

Our goal for this part of the homework is to create mutants of L-protein that affect its lysis activity and/or its interaction with DNAj. Making a mutation for L-protein without a way to computationally predict what happens to lysis or its interaction with DNAj is hard. So we are going to try various hypotheses on how to use the models from last week and also try a few other tools. These mutants will be tested in the lab.

## L-Protein and DNAj Sequence

**Lysis Protein Sequence (UniProtKB ID:**  https://www.uniprot.org/uniprotkb/P03609/entry**)**

```jsx
METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT
```

Lysis protein contains a soluble N-terminal domain followed by a transmembrane protein (blue/last 35 residues). Transmembrane protein affects the lysis activity. The soluble domain (green) is the domain responsible for interaction with DNAj. 

**DNAj sequence  (UniProtKB ID:**  https://www.uniprot.org/uniprotkb/P03609/entry**)** 

```jsx
MAKQDYYEILGVSKTAEEREIRKAYKRLAMKYHPDRNQGDKEAEAKFKEIKEAYEVLTDSQKRAAYDQYGHAAFEQGGMGGGGFGGGADFSDIFGDVFGDIFGGGRGRQRAARGADLRYNMELTLEEAVRGVTKEIRIPTLEECDVCHGSGAKPGTQPQTCPTCHGSGQVQMRQGFFAVQQTCPHCQGRGTLIKDPCNKCHGHGRVERSKTLSVKIPAGVDTGDRIRLAGEGEAGEHGAPAGDLYVQVQVKQHPIFEREGNNLYCEVPINFAMAALGGEIEVPTLDGRVKLKVPGETQTGKLFRMRGKGVKSVRGGAQGDLLCRVVVETPVGLNERQKQLLQELQESFGGPTGEHNSPRSKSFFDGVKKFFDDLTR 
```

In this homework we will be doing the following steps. Step 2 might vary from student to student

![Untitled presentation.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/3c1fedd4-a593-4e16-aa99-6fa4c5286f1f/Untitled_presentation.png)

**Additional Information**

1. Using the mutational analysis of lysis protein from https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5775895/  Here is a list of some mutations and their effect on lysis  [https://docs.google.com/spreadsheets/d/11WzDDNkQDEiqbUSGV0ZCqITGctyNFpD7xnPlhsj2BhE/edit#gid=0](https://docs.google.com/spreadsheets/d/11WzDDNkQDEiqbUSGV0ZCqITGctyNFpD7xnPlhsj2BhE/edit?usp=sharing) [Three columns highlighted ! Please copy the sheet before any edits).
2. In the last class, we used pBLAST to find evolutionary sequences from other organisms and visualized it using clustalomega. BLAST results for L-protein are here - https://drive.google.com/drive/folders/1eQeuwL9WiO16bw6Lb8z-TVpbWIoAF4EH?usp=share_link .  You can upload it to clustalomega - https://www.ebi.ac.uk/jdispatcher/msa/clustalo to get the alignments. Usually a good idea to not make mutations in the conserved sites (the amino acid positions where you see no changes in the alignments)
3. Additional Information about the sequence is linked here - [https://www.notion.so/howtogrowalmostanything/L-Protein-Sequence-Information-7a29684affaa4e3b9adf070cbb7c9908?pvs=4](https://www.notion.so/L-Protein-Sequence-Design-Considerations-7a29684affaa4e3b9adf070cbb7c9908?pvs=21) 

SUBMIT YOUR MUTATIONS HERE. Also add one sentence about what approach you are using. Just make a new sheet with your lastname_firstname_approach

https://docs.google.com/spreadsheets/d/15Ho8WCnXI7iYK6XSmsMG0diEDQhgZZVR9gfD13MCAgU/edit#gid=0

| Approach | Description | Student 1 | Student 2 | Student 3 |
| --- | --- | --- | --- | --- |
| Mutagenesis using Protein Language Models | https://www.notion.so/Class-4-Protein-Design-Part-2-d55d2d6db430437ea335ed41149e042a?pvs=21 |  |  |  |
| Mutagenesis using Af2-Multimer | https://www.notion.so/Class-4-Protein-Design-Part-2-d55d2d6db430437ea335ed41149e042a?pvs=21 |  |  |  |
| Mutagenesis using Rosetta | https://www.notion.so/Class-4-Protein-Design-Part-2-d55d2d6db430437ea335ed41149e042a?pvs=21 |  |  |  |
| Random Mutagenesis | https://www.notion.so/Class-4-Protein-Design-Part-2-d55d2d6db430437ea335ed41149e042a?pvs=21 |  |  |  |
| Other | Only for students who have a background in protein engineering already |  |  |  |

## Mutagenesis using Protein Language Models [Easiest One]
 (credit and huge thanks to TA Allan Costa)

<aside>
⚠️ Designing these mutants with good computational confidence is hard. It will show you limitations of some of the structure based models. Ultimately you can pick various combinations of mutations and get lab results and then decide to pick the next round of mutations. But this assay won’t be easy to run at scale in this class. So using the information below you can either make a best guess or you can use the strategy Allan was talking about during recitation. Contact Manu or Allan if you need one on one help.

</aside>

1. Run this [notebook](https://colab.research.google.com/drive/1tFSwLWkSeu9KdsLPdepzPfGW1LBy2RPd?usp=sharing) to generate for each position in the amino acid sequence, a “score” for what would happen to the protein if you mutated into another amino acid. It can be positive or negative for the protein.  We want to identify possible mutations that are “positive” If you run this notebook - you will see a .CSV file in the sidebar. You can download it and look at it in the google sheets if that’s easier
    
    <aside>
    💡 I’m running the [notebook](https://colab.research.google.com/drive/1Wv_Wn37iVALTbUrb6lhjhTT9i129RK6f?usp=sharing) using the **[esm2_t33_650M_UR50D](https://huggingface.co/facebook/esm2_t33_650M_UR50D)** (with 33 layer / 150M parameters) ****model found [here](https://huggingface.co/facebook/esm2_t6_8M_UR50D).
    
    ![Screenshot 2024-03-15 at 12.58.57.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/e52a6300-406f-409c-94a4-9eee4b7ce702/Screenshot_2024-03-15_at_12.58.57.png)
    
    </aside>
    
2. Use the experimental data here. This dataset contains information about mutants of the L-Protein and their effect on lysis in the lab - https://docs.google.com/spreadsheets/d/11WzDDNkQDEiqbUSGV0ZCqITGctyNFpD7xnPlhsj2BhE/edit?usp=sharing
3. First check, does the experimental data correlated with the scores from the notebook in (1) ? This should give you a clue on how well these language embeddings capture information about this protein sequence. 
4. Using information about effect of protein mutations at these sites -  both the scores and the experimental data in the drive, come up with 5 mutations for each student along with how you came up with them and why you believe they would work. 2 of the variants you submit must have mutations in the transmembrane region (refer to notes above on what amino acid positions these are) and 2 of them must be in the soluble region . Remember that you can also use the pBLAST to see which residues are conserved and not mutate them if you want to. 

One easy way to generate sequence mutations could be to look for residue positions and mutations that are have a positive mutational effect either in the experimental or have a positive score from step 1. And pick a combination of those mutations. 

5. You can utilize Af2_Multimer to generate a Multimeric Assembly [TA: Ben Arias-Almeida]
you can do this by making your query sequence as. We want to do this because -  A running hypothesis for how this protein function is that it *assembles* to make a perforation in the bacterial membrane. Our TA Ben Arias-Almeida discovered that when we predict the **assemble of 8 structures of the lysis protein***,* it indeed reveals a channel-like complex.

    
    ![Untitled-2.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/1c451192-20ec-4caf-b188-eb1208b60dbf/Untitled-2.png)
    
    ![Untitled.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/28df2a9f-51d9-4f1c-a347-eb1a46d8102c/f530b8c0-caf0-4779-82fb-13819b52fcfc/Untitled.png)
    
    ```jsx
    METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT:METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT:METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT:METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT:METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT:METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT:METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLLT:METRFPQQSQQTPASTNRRRPFKHEDYPCRRQQRSSTLYVLIFLAIFLSKFTNQLLLSLLEAVIRTVTTLQQLL
    ```
    

------------------------------
Here is my evaluation of the student's performance on designing mutants of the MS2 bacteriophage L-protein to improve its lysis activity against E. coli:

The student did a thorough job researching background information on the L-protein, including:

- Identifying key functional domains (N-terminal soluble domain that interacts with DnaJ chaperone, C-terminal transmembrane domain important for lysis activity)
- Analyzing previous mutational studies to understand the impact of specific mutations on lysis 
- Using pBLAST to identify conserved residues across related sequences that should be avoided for mutation
- Considering the hypothesis that the L-protein assembles into a channel-like complex for membrane permeation

The student applied a systematic approach leveraging computational tools learned in class to design their mutants:

1. Used a protein language model to score the predicted effect of all possible single amino acid mutations. This helps prioritize mutations predicted to improve function.

2. Compared the language model predictions to experimental mutation data to assess confidence in the computational predictions. 

3. Designed 5 mutants per student, with a mix of mutations in the soluble and transmembrane domains, using the language model scores, experimental data, and conservation analysis to rationalize the choices.

4. Used AlphaFold2 to model an 8-mer assembly of the L-protein to visualize how it may form a membrane channel. This multimeric model can help assess the structural impact of mutations.

Overall, the student demonstrated strong understanding of the biological context, devised a logical mutation design strategy building on course content, and provided clear rationale for their selected mutations balancing multiple lines of computational and experimental evidence. 

The mutations were not tested experimentally, but that is appropriate for the scope of this assignment. The student is thinking carefully about generating testable hypotheses using state-of-the-art computational tools.

To further improve, the student could discuss a bit more about specific mutation choices - why particular residue positions and amino acid substitutions were selected. More details on using the language model scores and experimental data to prioritize combinations of mutations would also be helpful.

But in all, this represents excellent work at the graduate level - rigorously researching the problem, deriving insights from the literature and data, applying advanced computational methods in an integrated way, and crafting a mutation strategy ready for empirical testing. The student deserves a high mark for both effort and execution.
==============================
